--- ldap-account-manager-3.2.0/help/help.inc~	2011-02-05 14:06:39.000000000 +0200
+++ ldap-account-manager-3.2.0/help/help.inc	2011-02-05 14:07:51.532944179 +0200
@@ -115,6 +115,10 @@
 					"Text" => _("Please enter the LDAP suffix where LAM should start to search for users. The LDAP filter needs to match the given user name to exactly one DN. The value \"%USER%\" will be replaced by the user name from the login page.")),
 				"222" => array ("Headline" => _("LDAP search limit"),
 					"Text" => _("Here you can set a limit for LDAP searches. This will restrict the number of results for LDAP searches. Please use this if LAM's LDAP queries produce too much load.")),
+				"223" => array ("Headline" => _("DN for LDAP searches"),
+					"Text" => _("Please enter the DN used for LDAP searches. Leave empty for anonymous bind (default).")),
+				"224" => array ("Headline" => _("Password of DN for LDAP searches"),
+					"Text" => _("Please enter the password of DN used for LDAP searches. Leave empty for anonymous bind (default).")),
 				"230" => array ("Headline" => _("Profile management") . " - " . _("Add profile"),
 					"Text" => _("Please enter the name of the new profile and the password to change its settings. Profile names may contain letters, numbers and -/_.")),
 				"231" => array ("Headline" => _("Profile management") . " - " . _("Rename profile"),
--- ldap-account-manager-3.2.0/lib/config.inc~	2011-02-05 14:09:11.000000000 +0200
+++ ldap-account-manager-3.2.0/lib/config.inc	2011-02-05 14:11:04.977687197 +0200
@@ -257,7 +257,11 @@
 	
 	/** search filter for login */
 	private $loginSearchFilter = 'uid=%USER%';
-	
+
+	/** DN to bind as when doing search for login, leave empty for anonymous bind */
+	private $loginSearchDN = '';
+	private $loginSearchDNpassword = '';
+
 	/** email address for sender of password reset mails */
 	private $lamProMailFrom = '';
 	
@@ -271,6 +275,7 @@
 	private $settings = array("ServerURL", "useTLS", "Passwd", "Admins", "treesuffix",
 		"defaultLanguage", "scriptPath", "scriptServer", "scriptRights", "cachetimeout",
 		"modules", "activeTypes", "types", "accessLevel", 'loginMethod', 'loginSearchSuffix',
+		'loginSearchDN', 'loginSearchDNPassword',
 		'loginSearchFilter', 'searchLimit', 'lamProMailFrom', 'lamProMailSubject', 'lamProMailText');
 
 
@@ -420,6 +425,8 @@
 			if (!in_array("loginMethod", $saved)) array_push($file_array, "\n\n# Login method.\n" . "loginMethod: " . $this->loginMethod . "\n");
 			if (!in_array("loginSearchSuffix", $saved)) array_push($file_array, "\n\n# Search suffix for LAM login.\n" . "loginSearchSuffix: " . $this->loginSearchSuffix . "\n");
 			if (!in_array("loginSearchFilter", $saved)) array_push($file_array, "\n\n# Search filter for LAM login.\n" . "loginSearchFilter: " . $this->loginSearchFilter . "\n");
+			if (!in_array("loginSearchDN", $saved)) array_push($file_array, "\n\n# DN to bind as when doing search for LAM login.\n" . "loginSearchDN: " . $this->loginSearchDN . "\n");
+			if (!in_array("loginSearchDNPassword", $saved)) array_push($file_array, "\n\n# Password for DN to bind as when doing search for LAM login.\n" . "loginSearchDNPassword: " . $this->loginSearchDNPassword . "\n");
 			if (!in_array("lamProMailFrom", $saved)) array_push($file_array, "\n\n# Password mail from\n" . "lamProMailFrom: " . $this->lamProMailFrom . "\n");
 			if (!in_array("lamProMailSubject", $saved)) array_push($file_array, "\n\n# Password mail subject\n" . "lamProMailSubject: " . $this->lamProMailSubject . "\n");
 			if (!in_array("lamProMailText", $saved)) array_push($file_array, "\n\n# Password mail text\n" . "lamProMailText: " . $this->lamProMailText . "\n");
@@ -1005,6 +1011,43 @@
 		$this->loginSearchSuffix = $loginSearchSuffix;
 	}
 
+	/**
+	 * Returns the DN to bind as when doing search for login.
+	 * 
+	 * @return String DN
+	 */
+	public function getLoginSearchDN() {
+		return $this->loginSearchDN;
+	}
+	
+	/**
+	 * Sets the DN to bind as when doing search for login.
+	 * 
+	 * @return String $loginSearchDN DN
+	 */
+	public function setLoginSearchDN($loginSearchDN) {
+		$this->loginSearchDN = $loginSearchDN;
+	}
+	
+	/**
+	 * Returns the password of DN to bind as when doing search for login.
+	 * 
+	 * @return String password
+	 */
+	public function getLoginSearchDNPassword() {
+		return $this->loginSearchDNPassword;
+	}
+	
+	/**
+	 * Sets the password of DN to bind as when doing search for login.
+	 * 
+	 * @return String $loginSearchDNPassword password
+	 */
+	public function setLoginSearchDNPassword($loginSearchDNPassword) {
+		$this->loginSearchDNPassword = $loginSearchDNPassword;
+	}
+	
+
 }
 
 
diff -ur ldap-account-manager-2.9.0/templates/config/confmain.php ldap-account-manager-2.9.0-noanon/templates/config/confmain.php
--- ldap-account-manager-2.9.0/templates/config/confmain.php	2010-02-15 15:17:10.773272050 +0100
+++ ldap-account-manager-2.9.0-noanon/templates/config/confmain.php	2010-02-15 15:16:41.912272764 +0100
@@ -494,6 +494,24 @@
 printHelpLink(getHelp('', '221'), '221');
 echo "</td></tr>\n";
 $tabindex++;
+// login search DN
+echo "<tr id=\"trLoginSearchDN\"><td align=\"right\">\n";
+echo "<b>".
+	_("DN for LDAP searches") . ": </b></td>".
+	"<td><input type=\"text\" tabindex=\"$tabindex\" name=\"loginSearchDN\" value=\"" . $conf->getLoginSearchDN() . "\"  size=50></td>\n";
+echo "<td>";
+printHelpLink(getHelp('', '223'), '223');
+echo "</td></tr>\n";
+$tabindex++;
+// login search DN password
+echo "<tr id=\"trLoginSearchDNPassword\"><td align=\"right\">\n";
+echo "<b>".
+	_("Password of DN for LDAP searches") . ": </b></td>".
+	"<td><input type=\"password\" tabindex=\"$tabindex\" name=\"loginSearchDNPassword\" value=\"" . $conf->getLoginSearchDNPassword() . "\"  size=50></td>\n";
+echo "<td>";
+printHelpLink(getHelp('', '224'), '224');
+echo "</td></tr>\n";
+$tabindex++;
 
 echo ("<tr><td colspan=3>&nbsp;</td></tr>\n");
 
@@ -563,6 +581,8 @@
 	$conf->setLoginMethod($_POST['loginMethod']);
 	$conf->setLoginSearchFilter($_POST['loginSearchFilter']);
 	$conf->setLoginSearchSuffix($_POST['loginSearchSuffix']);
+	$conf->setLoginSearchDN($_POST['loginSearchDN']);
+	$conf->setLoginSearchDNPassword($_POST['loginSearchDNPassword']);
 	if (!$conf->set_Adminstring(implode(";", $adminTextNew))) {
 		$errors[] = array("ERROR", _("List of admin users is empty or invalid!"));
 	}
diff -ur ldap-account-manager-2.9.0/templates/login.php ldap-account-manager-2.9.0-noanon/templates/login.php
--- ldap-account-manager-2.9.0/templates/login.php	2010-02-15 15:17:10.786334238 +0100
+++ ldap-account-manager-2.9.0-noanon/templates/login.php	2010-02-15 15:12:23.418271975 +0100
@@ -436,7 +436,7 @@
 			$searchSuccess = true;
 			$searchError = '';
 			$searchLDAP = new Ldap($_SESSION['config']);
-			$searchLDAPResult = $searchLDAP->connect('', '', true);
+			$searchLDAPResult = $searchLDAP->connect($_SESSION['config']->getLoginSearchDN(), $_SESSION['config']->getLoginSearchDNPassword(), true);
 			if (! ($searchLDAPResult == 0)) {
 				$searchSuccess = false;
 				$searchError = _('Cannot connect to specified LDAP server. Please try again.') . ' ' . @ldap_error($searchLDAP->server());
--- ldap-account-manager-3.2.0/templates/lib/lam.js~	2011-02-05 14:12:35.000000000 +0200
+++ ldap-account-manager-3.2.0/templates/lib/lam.js	2011-02-05 14:12:40.638347688 +0200
@@ -34,10 +34,14 @@
 		 document.getElementById('trAdminList').style.display = '';
 		 document.getElementById('trLoginSearchSuffix').style.display = 'none';
 		 document.getElementById('trLoginSearchFilter').style.display = 'none';
+		 document.getElementById('trLoginSearchDN').style.display = 'none';
+		 document.getElementById('trLoginSearchDNPassword').style.display = 'none';
 	}
 	else {
 		 document.getElementById('trAdminList').style.display = 'none';
 		 document.getElementById('trLoginSearchSuffix').style.display = '';
 		 document.getElementById('trLoginSearchFilter').style.display = '';
+		 document.getElementById('trLoginSearchDN').style.display = '';
+		 document.getElementById('trLoginSearchDNPassword').style.display = '';
 	}
 }
